{"ast":null,"code":"import axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nconst API_URL = 'http://localhost:5144/api/Auth'; // Adjust the URL as necessary\n\nclass AuthService {\n  login(email, password) {\n    return axios.post(`${API_URL}/`, {\n      email,\n      password\n    }).then(response => {\n      const token = response.data.token;\n      localStorage.setItem('token', token);\n      localStorage.setItem('email');\n      return token;\n    });\n  }\n  logout() {\n    localStorage.removeItem('token');\n  }\n  getToken() {\n    if (AuthService.isLocalStorageAvailable()) {\n      return localStorage.getItem('token');\n    }\n    return null;\n  }\n  getUserFromToken(token) {\n    return jwtDecode(token);\n  }\n  static isLocalStorageAvailable() {\n    try {\n      const testKey = '__test__';\n      localStorage.setItem(testKey, testKey);\n      localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\nconst authServiceInstance = new AuthService();\nexport default authServiceInstance;\n//export default new AuthService();","map":{"version":3,"names":["axios","jwtDecode","API_URL","AuthService","login","email","password","post","then","response","token","data","localStorage","setItem","logout","removeItem","getToken","isLocalStorageAvailable","getItem","getUserFromToken","testKey","e","authServiceInstance"],"sources":["C:/Users/2419406/Downloads/react-client-app-for-api/src/services/AuthService.js"],"sourcesContent":["import axios from 'axios';\nimport {jwtDecode} from 'jwt-decode';\n\nconst API_URL = 'http://localhost:5144/api/Auth'; // Adjust the URL as necessary\n\nclass AuthService {\n  \n\n  login(email, password) {\n    return axios.post(`${API_URL}/`, { email, password })\n      .then(response => {\n        const token = response.data.token;\n        localStorage.setItem('token', token);\n        localStorage.setItem('email')\n        return token;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n  }\n\n  getToken() {\n    if(AuthService.isLocalStorageAvailable())\n      {\n    return localStorage.getItem('token');\n      }\n      return null;\n  }\n\n  getUserFromToken(token) {\n    return jwtDecode(token);\n  }\n  static isLocalStorageAvailable() {\n    try {\n      const testKey = '__test__';\n      localStorage.setItem(testKey, testKey);\n      localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\nconst authServiceInstance = new AuthService();\nexport default authServiceInstance;\n//export default new AuthService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,YAAY;AAEpC,MAAMC,OAAO,GAAG,gCAAgC,CAAC,CAAC;;AAElD,MAAMC,WAAW,CAAC;EAGhBC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACrB,OAAON,KAAK,CAACO,IAAI,CAAC,GAAGL,OAAO,GAAG,EAAE;MAAEG,KAAK;MAAEC;IAAS,CAAC,CAAC,CAClDE,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACD,KAAK;MACjCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;MACpCE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC7B,OAAOH,KAAK;IACd,CAAC,CAAC;EACN;EAEAI,MAAMA,CAAA,EAAG;IACPF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,QAAQA,CAAA,EAAG;IACT,IAAGb,WAAW,CAACc,uBAAuB,CAAC,CAAC,EACtC;MACF,OAAOL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAClC;IACA,OAAO,IAAI;EACf;EAEAC,gBAAgBA,CAACT,KAAK,EAAE;IACtB,OAAOT,SAAS,CAACS,KAAK,CAAC;EACzB;EACA,OAAOO,uBAAuBA,CAAA,EAAG;IAC/B,IAAI;MACF,MAAMG,OAAO,GAAG,UAAU;MAC1BR,YAAY,CAACC,OAAO,CAACO,OAAO,EAAEA,OAAO,CAAC;MACtCR,YAAY,CAACG,UAAU,CAACK,OAAO,CAAC;MAChC,OAAO,IAAI;IACb,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,OAAO,KAAK;IACd;EACF;AACF;AACA,MAAMC,mBAAmB,GAAG,IAAInB,WAAW,CAAC,CAAC;AAC7C,eAAemB,mBAAmB;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}