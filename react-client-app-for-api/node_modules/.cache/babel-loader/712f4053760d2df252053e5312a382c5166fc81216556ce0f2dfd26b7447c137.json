{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2419406\\\\Downloads\\\\react-client-app-for-api\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5144\";\nconst getToken = () => localStorage.getItem(\"token\");\nconst getConfig = () => ({\n  headers: {\n    Authorization: `Bearer ${getToken()}`\n  }\n});\nfunction AdminPanel() {\n  _s();\n  // Admin info + list + editing\n  const [currentAdmin, setCurrentAdmin] = useState(null);\n  const [admins, setAdmins] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [editAdmin, setEditAdmin] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Form for adding or editing admin\n  const [formAdmin, setFormAdmin] = useState({\n    AdminId: 0,\n    Name: \"\",\n    Role: \"\",\n    Permissions: \"\",\n    Email: \"\",\n    Password: \"\"\n  });\n\n  // Load profile and admins on mount\n  useEffect(() => {\n    fetchProfile();\n    fetchAdmins();\n  }, []);\n\n  // Fetch logged-in admin profile\n  const fetchProfile = async () => {\n    setLoading(true);\n    try {\n      const emailStored = localStorage.getItem(\"email\");\n      const res = await axios.get(`${API_BASE}/Admin/Profile?email=${emailStored}`, getConfig());\n      setCurrentAdmin(res.data);\n    } catch {\n      handleLogout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch all admins\n  const fetchAdmins = async () => {\n    try {\n      const res = await axios.get(`${API_BASE}/Admin/List`, getConfig());\n      setAdmins(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch admins\", err);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"email\");\n    setCurrentAdmin(null);\n    setAdmins([]);\n    setEditAdmin(null);\n    setMessage(\"\");\n  };\n\n  // Fill form for editing\n  const startEdit = admin => {\n    setFormAdmin({\n      AdminId: admin.AdminId,\n      Name: admin.Name,\n      Role: admin.Role,\n      Permissions: admin.Permissions,\n      Email: admin.Email,\n      Password: \"\" // empty password, optional to change\n    });\n    setEditAdmin(admin.AdminId);\n    setMessage(\"\");\n  };\n\n  // Reset form to empty (add mode)\n  const resetForm = () => {\n    setFormAdmin({\n      AdminId: 0,\n      Name: \"\",\n      Role: \"\",\n      Permissions: \"\",\n      Email: \"\",\n      Password: \"\"\n    });\n    setEditAdmin(null);\n    setMessage(\"\");\n  };\n\n  // Handle input changes in form\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormAdmin(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Submit add or update\n  const handleSubmitForm = async e => {\n    e.preventDefault();\n    if (!formAdmin.Name || !formAdmin.Role || !formAdmin.Email) {\n      setMessage(\"Please fill all required fields (Name, Role, Email)\");\n      return;\n    }\n    try {\n      const payload = {\n        ...formAdmin\n      };\n      if (editAdmin && !payload.Password) {\n        delete payload.Password; // do not send empty password when updating\n      }\n      if (editAdmin) {\n        // Update\n        await axios.put(`${API_BASE}/Admin/Update?id=${formAdmin.AdminId}`, payload, getConfig());\n        setMessage(\"Admin updated successfully.\");\n      } else {\n        // Create\n        await axios.post(`${API_BASE}/Admin/Create`, payload, getConfig());\n        setMessage(\"Admin created successfully.\");\n      }\n      resetForm();\n      fetchAdmins();\n    } catch (err) {\n      setMessage(\"Operation failed.\");\n      console.error(err);\n    }\n  };\n\n  // Delete admin\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this admin?\")) return;\n    try {\n      await axios.delete(`${API_BASE}/Admin/Delete?id=${id}`, getConfig());\n      setMessage(\"Admin deleted.\");\n      fetchAdmins();\n      if (editAdmin === id) resetForm();\n    } catch (err) {\n      setMessage(\"Delete failed.\");\n      console.error(err);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading profile...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 23\n  }, this);\n\n  // Logged in: show admin dashboard and admin management\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 900,\n      margin: \"auto\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", currentAdmin === null || currentAdmin === void 0 ? void 0 : currentAdmin.Name, \" (Role: \", currentAdmin === null || currentAdmin === void 0 ? void 0 : currentAdmin.Role, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      style: {\n        marginBottom: 20\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Manage Admins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitForm,\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Name\",\n        placeholder: \"Name *\",\n        value: formAdmin.Name,\n        onChange: handleFormChange,\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 8,\n          marginBottom: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"Email\",\n        placeholder: \"Email *\",\n        value: formAdmin.Email,\n        onChange: handleFormChange,\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 8,\n          marginBottom: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Role\",\n        placeholder: \"Role *\",\n        value: formAdmin.Role,\n        onChange: handleFormChange,\n        required: true,\n        style: {\n          width: \"100%\",\n          padding: 8,\n          marginBottom: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Permissions\",\n        placeholder: \"Permissions\",\n        value: formAdmin.Permissions,\n        onChange: handleFormChange,\n        style: {\n          width: \"100%\",\n          padding: 8,\n          marginBottom: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"Password\",\n        placeholder: editAdmin ? \"New Password (optional)\" : \"Password *\",\n        value: formAdmin.Password,\n        onChange: handleFormChange,\n        required: !editAdmin,\n        style: {\n          width: \"100%\",\n          padding: 8,\n          marginBottom: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: 10,\n          marginRight: 10\n        },\n        children: editAdmin ? \"Update Admin\" : \"Add Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), editAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetForm,\n        style: {\n          padding: 10\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"8\",\n      style: {\n        width: \"100%\",\n        borderCollapse: \"collapse\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Permissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [admins.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"No admins found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), admins.map(a => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.Email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.Role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: a.Permissions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEdit(a),\n              style: {\n                marginRight: 10\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(a.AdminId),\n              style: {\n                color: \"red\"\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, a.AdminId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"Go1F3MbfpV8bVYLycg/+IiCQCKQ=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE","getToken","localStorage","getItem","getConfig","headers","Authorization","AdminPanel","_s","currentAdmin","setCurrentAdmin","admins","setAdmins","message","setMessage","editAdmin","setEditAdmin","loading","setLoading","formAdmin","setFormAdmin","AdminId","Name","Role","Permissions","Email","Password","fetchProfile","fetchAdmins","emailStored","res","get","data","handleLogout","err","console","error","removeItem","startEdit","admin","resetForm","handleFormChange","e","name","value","target","prev","handleSubmitForm","preventDefault","payload","put","post","handleDelete","id","window","confirm","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","padding","onClick","marginBottom","onSubmit","type","placeholder","onChange","required","width","marginRight","border","cellPadding","borderCollapse","length","colSpan","textAlign","map","a","color","_c","$RefreshReg$"],"sources":["C:/Users/2419406/Downloads/react-client-app-for-api/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst API_BASE = \"http://localhost:5144\";\r\n\r\nconst getToken = () => localStorage.getItem(\"token\");\r\n\r\nconst getConfig = () => ({\r\n  headers: { Authorization: `Bearer ${getToken()}` },\r\n});\r\n\r\nfunction AdminPanel() {\r\n  // Admin info + list + editing\r\n  const [currentAdmin, setCurrentAdmin] = useState(null);\r\n  const [admins, setAdmins] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [editAdmin, setEditAdmin] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Form for adding or editing admin\r\n  const [formAdmin, setFormAdmin] = useState({\r\n    AdminId: 0,\r\n    Name: \"\",\r\n    Role: \"\",\r\n    Permissions: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n  });\r\n\r\n  // Load profile and admins on mount\r\n  useEffect(() => {\r\n    fetchProfile();\r\n    fetchAdmins();\r\n  }, []);\r\n\r\n  // Fetch logged-in admin profile\r\n  const fetchProfile = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const emailStored = localStorage.getItem(\"email\");\r\n      const res = await axios.get(`${API_BASE}/Admin/Profile?email=${emailStored}`, getConfig());\r\n      setCurrentAdmin(res.data);\r\n    } catch {\r\n      handleLogout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch all admins\r\n  const fetchAdmins = async () => {\r\n    try {\r\n      const res = await axios.get(`${API_BASE}/Admin/List`, getConfig());\r\n      setAdmins(res.data);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch admins\", err);\r\n    }\r\n  };\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"email\");\r\n    setCurrentAdmin(null);\r\n    setAdmins([]);\r\n    setEditAdmin(null);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  // Fill form for editing\r\n  const startEdit = (admin) => {\r\n    setFormAdmin({\r\n      AdminId: admin.AdminId,\r\n      Name: admin.Name,\r\n      Role: admin.Role,\r\n      Permissions: admin.Permissions,\r\n      Email: admin.Email,\r\n      Password: \"\", // empty password, optional to change\r\n    });\r\n    setEditAdmin(admin.AdminId);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  // Reset form to empty (add mode)\r\n  const resetForm = () => {\r\n    setFormAdmin({\r\n      AdminId: 0,\r\n      Name: \"\",\r\n      Role: \"\",\r\n      Permissions: \"\",\r\n      Email: \"\",\r\n      Password: \"\",\r\n    });\r\n    setEditAdmin(null);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  // Handle input changes in form\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormAdmin((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Submit add or update\r\n  const handleSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    if (!formAdmin.Name || !formAdmin.Role || !formAdmin.Email) {\r\n      setMessage(\"Please fill all required fields (Name, Role, Email)\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = { ...formAdmin };\r\n      if (editAdmin && !payload.Password) {\r\n        delete payload.Password; // do not send empty password when updating\r\n      }\r\n\r\n      if (editAdmin) {\r\n        // Update\r\n        await axios.put(`${API_BASE}/Admin/Update?id=${formAdmin.AdminId}`, payload, getConfig());\r\n        setMessage(\"Admin updated successfully.\");\r\n      } else {\r\n        // Create\r\n        await axios.post(`${API_BASE}/Admin/Create`, payload, getConfig());\r\n        setMessage(\"Admin created successfully.\");\r\n      }\r\n      resetForm();\r\n      fetchAdmins();\r\n    } catch (err) {\r\n      setMessage(\"Operation failed.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Delete admin\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this admin?\")) return;\r\n    try {\r\n      await axios.delete(`${API_BASE}/Admin/Delete?id=${id}`, getConfig());\r\n      setMessage(\"Admin deleted.\");\r\n      fetchAdmins();\r\n      if (editAdmin === id) resetForm();\r\n    } catch (err) {\r\n      setMessage(\"Delete failed.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading profile...</p>;\r\n\r\n  // Logged in: show admin dashboard and admin management\r\n  return (\r\n    <div style={{ maxWidth: 900, margin: \"auto\", padding: 20 }}>\r\n      <h2>\r\n        Welcome, {currentAdmin?.Name} (Role: {currentAdmin?.Role})\r\n      </h2>\r\n      <button onClick={handleLogout} style={{ marginBottom: 20 }}>\r\n        Logout\r\n      </button>\r\n\r\n      <h3>Manage Admins</h3>\r\n\r\n      {/* Admin form */}\r\n      <form onSubmit={handleSubmitForm} style={{ marginBottom: 20 }}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"Name\"\r\n          placeholder=\"Name *\"\r\n          value={formAdmin.Name}\r\n          onChange={handleFormChange}\r\n          required\r\n          style={{ width: \"100%\", padding: 8, marginBottom: 10 }}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"Email\"\r\n          placeholder=\"Email *\"\r\n          value={formAdmin.Email}\r\n          onChange={handleFormChange}\r\n          required\r\n          style={{ width: \"100%\", padding: 8, marginBottom: 10 }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Role\"\r\n          placeholder=\"Role *\"\r\n          value={formAdmin.Role}\r\n          onChange={handleFormChange}\r\n          required\r\n          style={{ width: \"100%\", padding: 8, marginBottom: 10 }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"Permissions\"\r\n          placeholder=\"Permissions\"\r\n          value={formAdmin.Permissions}\r\n          onChange={handleFormChange}\r\n          style={{ width: \"100%\", padding: 8, marginBottom: 10 }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"Password\"\r\n          placeholder={editAdmin ? \"New Password (optional)\" : \"Password *\"}\r\n          value={formAdmin.Password}\r\n          onChange={handleFormChange}\r\n          required={!editAdmin}\r\n          style={{ width: \"100%\", padding: 8, marginBottom: 10 }}\r\n        />\r\n\r\n        <button type=\"submit\" style={{ padding: 10, marginRight: 10 }}>\r\n          {editAdmin ? \"Update Admin\" : \"Add Admin\"}\r\n        </button>\r\n        {editAdmin && (\r\n          <button type=\"button\" onClick={resetForm} style={{ padding: 10 }}>\r\n            Cancel\r\n          </button>\r\n        )}\r\n      </form>\r\n\r\n      {/* Message */}\r\n      {message && <p>{message}</p>}\r\n\r\n      {/* Admins list */}\r\n      <table border=\"1\" cellPadding=\"8\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Permissions</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {admins.length === 0 && (\r\n            <tr>\r\n              <td colSpan=\"5\" style={{ textAlign: \"center\" }}>\r\n                No admins found.\r\n              </td>\r\n            </tr>\r\n          )}\r\n          {admins.map((a) => (\r\n            <tr key={a.AdminId}>\r\n              <td>{a.Name}</td>\r\n              <td>{a.Email}</td>\r\n              <td>{a.Role}</td>\r\n              <td>{a.Permissions}</td>\r\n              <td>\r\n                <button onClick={() => startEdit(a)} style={{ marginRight: 10 }}>\r\n                  Edit\r\n                </button>\r\n                <button onClick={() => handleDelete(a.AdminId)} style={{ color: \"red\" }}>\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}