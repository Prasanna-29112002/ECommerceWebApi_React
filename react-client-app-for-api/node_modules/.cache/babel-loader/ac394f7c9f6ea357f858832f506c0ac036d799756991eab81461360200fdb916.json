{"ast":null,"code":"import axios from 'axios';\nimport AuthService from './AuthService';\nconst API_URL = 'http://localhost:5144/Product';\nclass ProductService {\n  getHeaders() {\n    const token = AuthService.getToken();\n    return {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n  }\n  getProductsByCategory(categoryName) {\n    return axios.get(`${API_URL}/category/${categoryName}`, this.getHeaders());\n  }\n  getProducts() {\n    return axios.get(API_URL, this.getHeaders());\n  }\n\n  // You can also add create/update/delete methods here\n}\nexport default new ProductService();","map":{"version":3,"names":["axios","AuthService","API_URL","ProductService","getHeaders","token","getToken","headers","Authorization","getProductsByCategory","categoryName","get","getProducts"],"sources":["C:/Users/2419406/Downloads/react-client-app-for-api/src/services/ProductService.js"],"sourcesContent":["import axios from 'axios';\nimport AuthService from './AuthService';\n\nconst API_URL = 'http://localhost:5144/Product';\n\nclass ProductService {\n  getHeaders() {\n    const token = AuthService.getToken();\n    return {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n  }\n\n  getProductsByCategory(categoryName) {\n    return axios.get(`${API_URL}/category/${categoryName}`, this.getHeaders());\n  }\n\n  getProducts() {\n    return axios.get(API_URL, this.getHeaders());\n  }\n\n  // You can also add create/update/delete methods here\n}\n\nexport default new ProductService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,OAAO,GAAG,+BAA+B;AAE/C,MAAMC,cAAc,CAAC;EACnBC,UAAUA,CAAA,EAAG;IACX,MAAMC,KAAK,GAAGJ,WAAW,CAACK,QAAQ,CAAC,CAAC;IACpC,OAAO;MACLC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUH,KAAK;MAAG;IAC9C,CAAC;EACH;EAEAI,qBAAqBA,CAACC,YAAY,EAAE;IAClC,OAAOV,KAAK,CAACW,GAAG,CAAC,GAAGT,OAAO,aAAaQ,YAAY,EAAE,EAAE,IAAI,CAACN,UAAU,CAAC,CAAC,CAAC;EAC5E;EAEAQ,WAAWA,CAAA,EAAG;IACZ,OAAOZ,KAAK,CAACW,GAAG,CAACT,OAAO,EAAE,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC;EAC9C;;EAEA;AACF;AAEA,eAAe,IAAID,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}